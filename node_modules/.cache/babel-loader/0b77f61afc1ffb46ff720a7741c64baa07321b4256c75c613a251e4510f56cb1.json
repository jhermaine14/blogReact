{"ast":null,"code":"var _jsxFileName = \"/Users/jhermaine.c/Desktop/Nodejs/my-app/src/blog/GridTable.js\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 40\n}, {\n  field: 'time',\n  headerName: 'Time',\n  width: 150\n}, {\n  field: 'wind_speed_10m',\n  headerName: 'Wind Speed',\n  width: 90\n}, {\n  field: 'temperature_2m',\n  headerName: 'Temperature',\n  width: 90\n}, {\n  field: 'relative_humidity_2m',\n  headerName: 'Relative Humidity',\n  width: 90\n}];\nconst rows = [{\n  id: 1,\n  time: 1,\n  wind_speed_10m: 'Snow',\n  temperature_2m: 'Jon',\n  relative_humidity_2m: 14\n}];\nfunction GridTable(props) {\n  const {\n    resultsJSON\n  } = props;\n\n  //Implementer la recuperation des données ...\n  //parsing results et creation entrée du tableau\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      columnVisibilityModel: {\n        id: false\n      },\n      initialState: {\n        pagination: {\n          paginationModel: {\n            pageSize: 5\n          }\n        }\n      },\n      pageSizeOptions: [5],\n      checkboxSelection: true,\n      disableRowSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_c = GridTable;\n;\nexport default GridTable;\nvar _c;\n$RefreshReg$(_c, \"GridTable\");","map":{"version":3,"names":["React","Box","DataGrid","jsxDEV","_jsxDEV","columns","field","headerName","width","rows","id","time","wind_speed_10m","temperature_2m","relative_humidity_2m","GridTable","props","resultsJSON","sx","height","children","columnVisibilityModel","initialState","pagination","paginationModel","pageSize","pageSizeOptions","checkboxSelection","disableRowSelectionOnClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jhermaine.c/Desktop/Nodejs/my-app/src/blog/GridTable.js"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nconst columns = [\r\n{  \r\n    field: 'id', \r\n    headerName: 'ID',\r\n    width: 40\r\n  },\r\n  { \r\n    field: 'time', \r\n    headerName: 'Time', \r\n    width: 150 \r\n  },\r\n  {\r\n    field: 'wind_speed_10m',\r\n    headerName: 'Wind Speed',\r\n    width: 90\r\n  },\r\n  {\r\n    field: 'temperature_2m',\r\n    headerName: 'Temperature',\r\n    width: 90\r\n  },\r\n  {\r\n    field: 'relative_humidity_2m',\r\n    headerName:  'Relative Humidity',\r\n    width: 90\r\n  }\r\n];\r\n\r\nconst rows = [\r\n  { id: 1, time: 1, wind_speed_10m: 'Snow', temperature_2m: 'Jon', relative_humidity_2m: 14 }\r\n];\r\n\r\n\r\nfunction GridTable(props) {\r\n\r\n    const { resultsJSON } = props;\r\n   \r\n    //Implementer la recuperation des données ...\r\n    //parsing results et creation entrée du tableau\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Box sx={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        columnVisibilityModel = {{id: false}}\r\n        initialState={{\r\n          pagination: {\r\n            paginationModel: {\r\n              pageSize: 5,\r\n            },\r\n          },\r\n        }}\r\n        pageSizeOptions={[5]}\r\n        checkboxSelection\r\n        disableRowSelectionOnClick\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GridTable;"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAG,CAChB;EACIC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,MAAM;EACbC,UAAU,EAAE,MAAM;EAClBC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,gBAAgB;EACvBC,UAAU,EAAE,YAAY;EACxBC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,gBAAgB;EACvBC,UAAU,EAAE,aAAa;EACzBC,KAAK,EAAE;AACT,CAAC,EACD;EACEF,KAAK,EAAE,sBAAsB;EAC7BC,UAAU,EAAG,mBAAmB;EAChCC,KAAK,EAAE;AACT,CAAC,CACF;AAED,MAAMC,IAAI,GAAG,CACX;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,CAAC;EAAEC,cAAc,EAAE,MAAM;EAAEC,cAAc,EAAE,KAAK;EAAEC,oBAAoB,EAAE;AAAG,CAAC,CAC5F;AAGD,SAASC,SAASA,CAACC,KAAK,EAAE;EAEtB,MAAM;IAAEC;EAAY,CAAC,GAAGD,KAAK;;EAE7B;EACA;;EAKF,oBACEZ,OAAA,CAACH,GAAG;IAACiB,EAAE,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEX,KAAK,EAAE;IAAO,CAAE;IAAAY,QAAA,eACtChB,OAAA,CAACF,QAAQ;MACPO,IAAI,EAAEA,IAAK;MACXJ,OAAO,EAAEA,OAAQ;MACjBgB,qBAAqB,EAAI;QAACX,EAAE,EAAE;MAAK,CAAE;MACrCY,YAAY,EAAE;QACZC,UAAU,EAAE;UACVC,eAAe,EAAE;YACfC,QAAQ,EAAE;UACZ;QACF;MACF,CAAE;MACFC,eAAe,EAAE,CAAC,CAAC,CAAE;MACrBC,iBAAiB;MACjBC,0BAA0B;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GA7BQlB,SAAS;AA6BjB;AAED,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}