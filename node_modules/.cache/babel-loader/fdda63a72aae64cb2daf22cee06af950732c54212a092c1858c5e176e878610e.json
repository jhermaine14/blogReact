{"ast":null,"code":"import*as React from'react';import PropTypes from'prop-types';import Grid from'@mui/material/Grid';import Typography from'@mui/material/Typography';import Divider from'@mui/material/Divider';import Markdown from'./Markdown';import{useEffect,useState}from'react';import Post1 from'./blog-post.1.md';import Post2 from'./blog-post.2.md';import Post3 from'./blog-post.3.md';/*async function afficherPost(post) {\n  fetch(post).then((reponse) => { reponse.text().then((text) => {console.log(text)})});\n}\n\n\nfunction Main(props) {\n  const { posts, title } = props;\n  const [postContents, setPostContents] = useState([]);*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ComposantHome(props){const[postContents,setPostContents]=useState([]);useEffect(()=>{//boucle de posts (url ressources) et recuperation du contenu\n// par le bias de la fonction fetch \n/* let nextId = 0;\n\n    posts.map((post) => (\n\n      fetch(post)\n      .then( (response) => response.text())\n      .then( (text) => setPostContents([...postContents,{id:nextId++,text:text}]) ) \n      .catch( (erreur) => console.log(\"requete echouée...\"+erreur))\n      ))*/Promise.all([fetch(Post1),fetch(Post2),fetch(Post3)]).then(arrayResponse=>Promise.all(arrayResponse.map(response=>response.text()))).then(arrayTexts=>setPostContents(arrayTexts)).catch(error=>console.error('Error fetching posts',error));},[]);return/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:8,sx:{'& .markdown':{py:3}},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:props.title}),/*#__PURE__*/_jsx(Divider,{}),postContents.map(postContent=>/*#__PURE__*/_jsx(Markdown,{className:\"markdown\",children:postContent},postContent.substring(0,40)))]});}ComposantHome.proTypes={title:PropTypes.string.isRequired};/*Main.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  title: PropTypes.string.isRequired,\n};*/ //export default Main;","map":{"version":3,"names":["React","PropTypes","Grid","Typography","Divider","Markdown","useEffect","useState","Post1","Post2","Post3","jsx","_jsx","jsxs","_jsxs","ComposantHome","props","postContents","setPostContents","Promise","all","fetch","then","arrayResponse","map","response","text","arrayTexts","catch","error","console","item","xs","md","sx","py","children","variant","gutterBottom","title","postContent","className","substring","proTypes","string","isRequired"],"sources":["/Users/jhermaine.c/blogReact/src/blog/Main.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Markdown from './Markdown';\nimport { useEffect, useState } from 'react';\nimport Post1 from './blog-post.1.md';\nimport Post2 from './blog-post.2.md';\nimport Post3 from './blog-post.3.md';\n\n\n/*async function afficherPost(post) {\n  fetch(post).then((reponse) => { reponse.text().then((text) => {console.log(text)})});\n}\n\n\nfunction Main(props) {\n  const { posts, title } = props;\n  const [postContents, setPostContents] = useState([]);*/\n\n  export default function ComposantHome(props) {\n\n  const [postContents, setPostContents] = useState([]);\n\n  useEffect(() => {\n    //boucle de posts (url ressources) et recuperation du contenu\n    // par le bias de la fonction fetch \n\n   /* let nextId = 0;\n\n    posts.map((post) => (\n\n      fetch(post)\n      .then( (response) => response.text())\n      .then( (text) => setPostContents([...postContents,{id:nextId++,text:text}]) ) \n      .catch( (erreur) => console.log(\"requete echouée...\"+erreur))\n      ))*/\n\n      Promise.all([fetch(Post1), fetch(Post2), fetch(Post3)])\n      .then((arrayResponse) => Promise.all(arrayResponse.map((response) => response.text())))\n      .then((arrayTexts) => setPostContents(arrayTexts))\n      .catch((error) => console.error('Error fetching posts', error));\n\n  }, []);\n\n  return (\n    <Grid\n      item\n      xs={12}\n      md={8}\n      sx={{\n        '& .markdown': {\n          py: 3,\n        },\n         \n      }}\n    >\n      <Typography variant=\"h6\" gutterBottom>\n        {props.title}\n      </Typography>\n      <Divider />\n      {/*boucle du contenu des posts pour la creation \n      des composants Markdown */} \n      \n      {postContents.map((postContent) => (\n        <Markdown className=\"markdown\" key={postContent.substring(0, 40)}>\n          {postContent}\n        </Markdown>\n      ))}\n    </Grid>\n  );\n}\n\nComposantHome.proTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n/*Main.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  title: PropTypes.string.isRequired,\n};*/\n\n//export default Main;\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAC9B,MAAO,CAAAC,SAAS,KAAM,YAAY,CAClC,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAC3C,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,kBAAkB,CACpC,MAAO,CAAAC,KAAK,KAAM,kBAAkB,CACpC,MAAO,CAAAC,KAAK,KAAM,kBAAkB,CAGpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAPA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBASE,cAAe,SAAS,CAAAC,aAAaA,CAACC,KAAK,CAAE,CAE7C,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEpDD,SAAS,CAAC,IAAM,CACd;AACA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAEMa,OAAO,CAACC,GAAG,CAAC,CAACC,KAAK,CAACb,KAAK,CAAC,CAAEa,KAAK,CAACZ,KAAK,CAAC,CAAEY,KAAK,CAACX,KAAK,CAAC,CAAC,CAAC,CACtDY,IAAI,CAAEC,aAAa,EAAKJ,OAAO,CAACC,GAAG,CAACG,aAAa,CAACC,GAAG,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACtFJ,IAAI,CAAEK,UAAU,EAAKT,eAAe,CAACS,UAAU,CAAC,CAAC,CACjDC,KAAK,CAAEC,KAAK,EAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAAC,CAEnE,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEf,KAAA,CAACZ,IAAI,EACH6B,IAAI,MACJC,EAAE,CAAE,EAAG,CACPC,EAAE,CAAE,CAAE,CACNC,EAAE,CAAE,CACF,aAAa,CAAE,CACbC,EAAE,CAAE,CACN,CAEF,CAAE,CAAAC,QAAA,eAEFxB,IAAA,CAACT,UAAU,EAACkC,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAClCpB,KAAK,CAACuB,KAAK,CACF,CAAC,cACb3B,IAAA,CAACR,OAAO,GAAE,CAAC,CAIVa,YAAY,CAACO,GAAG,CAAEgB,WAAW,eAC5B5B,IAAA,CAACP,QAAQ,EAACoC,SAAS,CAAC,UAAU,CAAAL,QAAA,CAC3BI,WAAW,EADsBA,WAAW,CAACE,SAAS,CAAC,CAAC,CAAE,EAAE,CAErD,CACX,CAAC,EACE,CAAC,CAEX,CAEA3B,aAAa,CAAC4B,QAAQ,CAAG,CACvBJ,KAAK,CAAEtC,SAAS,CAAC2C,MAAM,CAACC,UAC1B,CAAC,CAED;AACA;AACA;AACA,IAHA,CAKA"},"metadata":{},"sourceType":"module","externalDependencies":[]}